{"version":3,"file":"static/js/134.935e443f.chunk.js","mappings":"iOA8DA,UA1De,WACb,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,UAE1BC,GAAWC,EAAAA,EAAAA,OAOjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,yFACVL,EADU,2EAKaM,EAAAA,EAAAA,IAAkBN,GAL/B,gBAKLO,EALK,EAKLA,QACRX,EAASW,GANI,kDAQbC,QAAQC,IAAI,KAAIC,SARH,0DAAH,qDAWdL,GACD,GAAE,CAACL,IAOJ,OACE,iCACE,kBAAMW,SA3BW,SAAAC,GACnBA,EAAEC,iBACFd,EAAgB,CAAEC,OAAQP,GAC3B,EAwBG,WACE,kBACEqB,KAAK,OACLC,SAVa,SAAAH,GACnB,IAAQI,EAAUJ,EAAEK,OAAZD,MACRtB,EAASsB,EACV,EAQOA,MAAOvB,EACPyB,KAAK,YAEP,4BAAQ,cAETvB,IACC,wBACGA,EAAMwB,KAAI,SAAAC,GAAE,OACX,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAGE,IAAMC,MAAOrB,EAArC,SACGkB,EAAGI,OAASJ,EAAGF,QAFXE,EAAGE,GADD,QAWtB,C,8LC1DDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,SAGL,IAAMC,EAAgB,mCAAG,sGACPH,EAAAA,EAAAA,IAAU,oBADH,uBACtBI,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBvB,EAAiB,mCAAG,WAAMwB,GAAN,yFACRL,EAAAA,EAAAA,IAAU,eAAgB,CAAEM,OAAQ,CAAED,MAAAA,KAD9B,uBACvBD,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBG,EAAe,mCAAG,WAAMV,GAAN,yFACNG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADM,uBACrBO,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAkB,mCAAG,WAAMX,GAAN,yFACTG,EAAAA,EAAAA,IAAA,gBAAmBH,EAAnB,aADS,uBACxBO,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBK,EAAW,mCAAG,WAAMZ,GAAN,yFACFG,EAAAA,EAAAA,IAAA,gBAAmBH,IADjB,uBACjBO,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["pages/Movies.jsx","service/getFilms.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getFilmsForSearch } from 'service/getFilms';\n\nconst Movies = () => {\n  const [queri, setQueri] = useState('');\n  const [films, setFilms] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  const location = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ search: queri });\n  };\n\n  useEffect(() => {\n    const asyncUse = async () => {\n      if (!search) {\n        return;\n      }\n      try {\n        const { results } = await getFilmsForSearch(search);\n        setFilms(results);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    asyncUse();\n  }, [search]);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    setQueri(value);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          value={queri}\n          name=\"search\"\n        />\n        <button>Search</button>\n      </form>\n      {films && (\n        <ul>\n          {films.map(el => (\n            <li key={el.id}>\n              <Link to={`/movies/${el.id}`} state={location}>\n                {el.title || el.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst api_key = '8aba4e3419a44727b7eb66f35fce4fa2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key,\n  language: 'en-US',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get('trending/all/day');\n  return data;\n};\n\nexport const getFilmsForSearch = async query => {\n  const { data } = await axios.get('search/movie', { params: { query } });\n  return data;\n};\n\nexport const getCastByFilmId = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewsByFilmId = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getFilmById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n"],"names":["useState","queri","setQueri","films","setFilms","useSearchParams","searchParams","setSearchParams","search","get","location","useLocation","useEffect","asyncUse","getFilmsForSearch","results","console","log","message","onSubmit","e","preventDefault","type","onChange","value","target","name","map","el","to","id","state","title","axios","api_key","language","getTrendingFilms","data","query","params","getCastByFilmId","getReviewsByFilmId","getFilmById"],"sourceRoot":""}