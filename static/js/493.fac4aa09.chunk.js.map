{"version":3,"file":"static/js/493.fac4aa09.chunk.js","mappings":"yNA2CA,UAnCa,WACX,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,gHAEUC,EAAAA,EAAAA,GAAgBJ,GAF1B,gBAELK,EAFK,EAELA,KACRN,EAAUM,GAHG,gDAKbC,QAAQC,IAAI,KAAIC,SALH,yDAAH,qDAQdL,GACD,GAAE,CAACH,KAGF,+BACE,wBACGF,GACCA,EAAOW,KAAI,SAAAC,GAAE,OACX,2BACE,gBACEC,IAAKD,EAAGE,aAAH,UA5BT,oCA4BS,OAA2BF,EAAGE,cA1BjD,mIA2BcC,IAAI,MAEN,wBAAKH,EAAGI,QACR,uBAAIJ,EAAGK,cANAL,EAAGM,GADD,OAatB,C,8LCvCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,SAGL,IAAMC,EAAgB,mCAAG,sGACPH,EAAAA,EAAAA,IAAU,oBADH,uBACtBI,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBC,EAAiB,mCAAG,WAAMC,GAAN,yFACRN,EAAAA,EAAAA,IAAU,eAAgB,CAAEO,OAAQ,CAAED,MAAAA,KAD9B,uBACvBF,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBjB,EAAe,mCAAG,WAAMY,GAAN,yFACNC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,aADM,uBACrBK,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAkB,mCAAG,WAAMT,GAAN,yFACTC,EAAAA,EAAAA,IAAA,gBAAmBD,EAAnB,aADS,uBACxBK,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBK,EAAW,mCAAG,WAAMV,GAAN,yFACFC,EAAAA,EAAAA,IAAA,gBAAmBD,IADjB,uBACjBK,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["pages/Cast.jsx","service/getFilms.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCastByFilmId } from 'service/getFilms';\n\nconst img = 'https://image.tmdb.org/t/p/w500/';\nconst noImg =\n  'https://st4.depositphotos.com/4320021/23631/v/450/depositphotos_236319394-stock-illustration-photo-coming-soon-picture-frame.jpg';\n\nconst Cast = () => {\n  const [actors, setActors] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const asyncUse = async () => {\n      try {\n        const { cast } = await getCastByFilmId(movieId);\n        setActors(cast);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    asyncUse();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {actors &&\n          actors.map(el => (\n            <li key={el.id}>\n              <img\n                src={el.profile_path ? `${img}${el.profile_path}` : noImg}\n                alt=\"\"\n              />\n              <h3>{el.name}</h3>\n              <p>{el.character}</p>\n            </li>\n          ))}\n      </ul>\n    </>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst api_key = '8aba4e3419a44727b7eb66f35fce4fa2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key,\n  language: 'en-US',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get('trending/all/day');\n  return data;\n};\n\nexport const getFilmsForSearch = async query => {\n  const { data } = await axios.get('search/movie', { params: { query } });\n  return data;\n};\n\nexport const getCastByFilmId = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewsByFilmId = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getFilmById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","asyncUse","getCastByFilmId","cast","console","log","message","map","el","src","profile_path","alt","name","character","id","axios","api_key","language","getTrendingFilms","data","getFilmsForSearch","query","params","getReviewsByFilmId","getFilmById"],"sourceRoot":""}