{"version":3,"file":"static/js/884.39a8005e.chunk.js","mappings":"iOAqFA,UAvEqB,WAAO,IAAD,EACzB,GAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEMC,EAAAA,EAAAA,IAAYJ,GAFlB,OAEPK,EAFO,OAGbR,EAAQQ,GAHK,gDAKbC,QAAQC,IAAI,KAAIC,SALH,yDAAH,qDAQdL,GACD,GAAE,CAACH,KAGF,iCACE,SAAC,KAAD,CAAMS,GAAE,UAAEX,EAASY,aAAX,QAAoB,IAA5B,SAAiC,YAChCd,IACC,4BACE,gBACEe,IAAKf,EAAKgB,YAAL,UA7BL,oCA6BK,OAA4BhB,EAAKgB,aA3BhD,mIA4BUC,IAAKjB,EAAKkB,SAEZ,0BACE,2BACE,yBACE,wBAAKlB,EAAKkB,WAEZ,yBACE,uBAAIlB,EAAKmB,aAEX,yBACE,wBAAI,gBAEN,yBACE,uBAAInB,EAAKoB,cAEX,yBACE,wBACGpB,EAAKqB,OAAOC,KAAI,SAACC,EAAIC,GAAL,OACf,wBAAaD,EAAGE,MAAPD,EADM,iBAS7B,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAASX,GAAI,OAAQC,MAAOZ,EAASY,MAArC,SAA4C,YAI9C,yBACE,SAAC,KAAD,CAASD,GAAI,UAAWC,MAAOZ,EAASY,MAAxC,SAA+C,kBAKnD,SAAC,KAAD,MAGL,C,8LChFDY,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,mCAIdC,SAAU,SAGL,IAAMC,EAAgB,mCAAG,sGACPH,EAAAA,EAAAA,IAAU,oBADH,uBACtBjB,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBqB,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAU,eAAgB,CAAEM,OAAQ,CAAED,MAAAA,KAD9B,uBACvBtB,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBwB,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aADM,uBACrBzB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKf0B,EAAkB,mCAAG,WAAMD,GAAN,yFACTR,EAAAA,EAAAA,IAAA,gBAAmBQ,EAAnB,aADS,uBACxBzB,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBD,EAAW,mCAAG,WAAM0B,GAAN,yFACFR,EAAAA,EAAAA,IAAA,gBAAmBQ,IADjB,uBACjBzB,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,qD","sources":["pages/MovieDetails.jsx","service/getFilms.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getFilmById } from 'service/getFilms';\n\nconst img = 'https://image.tmdb.org/t/p/w500/';\nconst noImg =\n  'https://st4.depositphotos.com/4320021/23631/v/450/depositphotos_236319394-stock-illustration-photo-coming-soon-picture-frame.jpg';\n\nconst MovieDetails = () => {\n  const [film, setFilm] = useState(null);\n\n  const location = useLocation();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const asyncUse = async () => {\n      try {\n        const data = await getFilmById(movieId);\n        setFilm(data);\n      } catch (err) {\n        console.log(err.message);\n      }\n    };\n    asyncUse();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={location.state ?? '/'}>Go back</Link>\n      {film && (\n        <div>\n          <img\n            src={film.poster_path ? `${img}${film.poster_path}` : noImg}\n            alt={film.title}\n          />\n          <div>\n            <ul>\n              <li>\n                <h2>{film.title}</h2>\n              </li>\n              <li>\n                <p>{film.tagline}</p>\n              </li>\n              <li>\n                <h3>Overview</h3>\n              </li>\n              <li>\n                <p>{film.overview}</p>\n              </li>\n              <li>\n                <ul>\n                  {film.genres.map((el, i) => (\n                    <li key={i}>{el.name}</li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <NavLink to={'cast'} state={location.state}>\n            Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to={'reviews'} state={location.state}>\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst api_key = '8aba4e3419a44727b7eb66f35fce4fa2';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key,\n  language: 'en-US',\n};\n\nexport const getTrendingFilms = async () => {\n  const { data } = await axios.get('trending/all/day');\n  return data;\n};\n\nexport const getFilmsForSearch = async query => {\n  const { data } = await axios.get('search/movie', { params: { query } });\n  return data;\n};\n\nexport const getCastByFilmId = async id => {\n  const { data } = await axios.get(`movie/${id}/credits`);\n  return data;\n};\n\nexport const getReviewsByFilmId = async id => {\n  const { data } = await axios.get(`movie/${id}/reviews`);\n  return data;\n};\n\nexport const getFilmById = async id => {\n  const { data } = await axios.get(`movie/${id}`);\n  return data;\n};\n"],"names":["useState","film","setFilm","location","useLocation","movieId","useParams","useEffect","asyncUse","getFilmById","data","console","log","message","to","state","src","poster_path","alt","title","tagline","overview","genres","map","el","i","name","axios","api_key","language","getTrendingFilms","getFilmsForSearch","query","params","getCastByFilmId","id","getReviewsByFilmId"],"sourceRoot":""}